@model FurnitureFactory.Areas.FurnitureFactory.ViewModels.CustomerViewModel

@{
    ViewData["Title"] = "Index";
}

<h1>Customers</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<button class="btn btn-primary" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasExample" aria-controls="offcanvasExample">
    Filter
</button>
<div class="offcanvas offcanvas-start" tabindex="-1" id="offcanvasExample" aria-labelledby="offcanvasExampleLabel">
    <div class="offcanvas-header">
        <h5 class="offcanvas-title" id="offcanvasExampleLabel">Filter</h5>
        <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body">
        <form action="@Url.Action("Index", "Customer")" method="post">
            CompanyName: @Html.TextBox("CompanyName", Model.CompanyName, new { style = "width: 100px;" })<br>
            RepresentativeLastName: @Html.TextBox("RepresentativeLastName", Model.RepresentativeLastName, new { style = "width: 100px;" })<br>
            RepresentativeFirstName: @Html.TextBox("RepresentativeFirstName", Model.RepresentativeFirstName, new { style = "width: 100px;" })<br>
            RepresentativeMiddleName: @Html.TextBox("RepresentativeMiddleName", Model.RepresentativeMiddleName, new { style = "width: 100px;" })<br>
            PhoneNumber: @Html.TextBox("PhoneNumber", Model.PhoneNumber, new { style = "width: 100px;" })<br>
            Address: @Html.TextBox("Address", Model.Address, new { style = "width: 100px;" })<br>
            <input class="btn btn-primary" type="submit" value="Find"/>
        </form>
    </div>
</div>
<table class="table">
    <thead>
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.CompanyName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.RepresentativeLastName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.RepresentativeFirstName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.RepresentativeMiddleName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PhoneNumber)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Address)
        </th>
        <th></th>
    </tr>
    </thead>
    <tbody>
    @foreach (var item in Model.Customers)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.CompanyName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RepresentativeLastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RepresentativeFirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RepresentativeMiddleName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PhoneNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Address)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.CustomerId">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.CustomerId">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.CustomerId">Delete</a>
            </td>
        </tr>
    }
    </tbody>
</table>
<page-link page-model="@Model.PageViewModel" page-action="Index"></page-link>